#pragma once
#include <cstring>
#include <iostream>
#include "SerialPort.hpp" 

#define RETURN_FAIL 0
#define RETURN_SUCCESS 1

#pragma pack(push, 1)
typedef struct DATA_BITFIELD
{
	unsigned char day_night : 2;
	unsigned char command : 4;
	unsigned char : 2;
	unsigned char detection_cnt : 7;
	unsigned char : 1;
	unsigned char l_risk1 : 2;
	unsigned char l_position1 : 3;
	unsigned char : 3;
	unsigned char distance1 : 4;
	unsigned char l_direction1 : 3;
	unsigned char : 1;
	unsigned char riskrate1 : 7;
	unsigned char : 1;
	unsigned char l_risk2 : 2;
	unsigned char l_position2 : 3;
	unsigned char : 3;
	unsigned char distance2 : 4;
	unsigned char l_direction2 : 3;
	unsigned char : 1;
	unsigned char riskrate2 : 7;
	unsigned char : 1;
	unsigned char l_risk3 : 2;
	unsigned char l_position3 : 3;
	unsigned char : 3;
	unsigned char distance3 : 4;
	unsigned char l_direction3 : 3;
	unsigned char : 1;
	unsigned char riskrate3 : 7;
	unsigned char : 1;
}DATA_BITFIELD;

typedef struct PROTOCOL_INFO
{
	unsigned char sync;
	DATA_BITFIELD data;
	unsigned char crc;
}PROTOCOL_INFO;

#pragma pack(pop) 					
static const unsigned char crc_table_[256] =
{
	0x00, 0x1d, 0x3a, 0x27, 0x74, 0x69, 0x4e, 0x53, // 0
	0xe8, 0xf5, 0xd2, 0xcf, 0x9c, 0x81, 0xa6, 0xbb, // 1
	0xcd, 0xd0, 0xf7, 0xea, 0xb9, 0xa4, 0x83, 0x9e, // 2
	0x25, 0x38, 0x1f, 0x02, 0x51, 0x4c, 0x6b, 0x76, // 3
	0x87, 0x9a, 0xbd, 0xa0, 0xf3, 0xee, 0xc9, 0xd4, // 4
	0x6f, 0x72, 0x55, 0x48, 0x1b, 0x06, 0x21, 0x3c, // 5
	0x4a, 0x57, 0x70, 0x6d, 0x3e, 0x23, 0x04, 0x19, // 6
	0xa2, 0xbf, 0x98, 0x85, 0xd6, 0xcb, 0xec, 0xf1, // 7
	0x13, 0x0e, 0x29, 0x34, 0x67, 0x7a, 0x5d, 0x40, // 8
	0xfb, 0xe6, 0xc1, 0xdc, 0x8f, 0x92, 0xb5, 0xa8, // 9
	0xde, 0xc3, 0xe4, 0xf9, 0xaa, 0xb7, 0x90, 0x8d, // 10
	0x36, 0x2b, 0x0c, 0x11, 0x42, 0x5f, 0x78, 0x65, // 11
	0x94, 0x89, 0xae, 0xb3, 0xe0, 0xfd, 0xda, 0xc7, // 12
	0x7c, 0x61, 0x46, 0x5b, 0x08, 0x15, 0x32, 0x2f, // 13
	0x59, 0x44, 0x63, 0x7e, 0x2d, 0x30, 0x17, 0x0a, // 14
	0xb1, 0xac, 0x8b, 0x96, 0xc5, 0xd8, 0xff, 0xe2, // 15
	0x26, 0x3b, 0x1c, 0x01, 0x52, 0x4f, 0x68, 0x75, // 16
	0xce, 0xd3, 0xf4, 0xe9, 0xba, 0xa7, 0x81, 0x9d, // 17
	0xeb, 0xf6, 0xd1, 0xcc, 0x9f, 0x82, 0xa5, 0xb8, // 18
	0x03, 0x1e, 0x39, 0x24, 0x77, 0x6a, 0x4d, 0x50, // 19
	0xa1, 0xbc, 0x9b, 0x86, 0xd5, 0xc8, 0xef, 0xf2, // 20
	0x49, 0x54, 0x73, 0x6e, 0x3d, 0x20, 0x07, 0x1a, // 21
	0x6c, 0x71, 0x56, 0x4b, 0x18, 0x05, 0x22, 0x3f, // 22
	0x84, 0x99, 0xbe, 0xa3, 0xf0, 0xed, 0xca, 0xd7, // 23
	0x35, 0x28, 0x0f, 0x12, 0x41, 0x5c, 0x7b, 0x66, // 24
	0xdd, 0xc0, 0xe7, 0xfa, 0xa9, 0xb4, 0x93, 0x8e, // 25
	0xf8, 0xe5, 0xc2, 0xdf, 0x8c, 0x91, 0xb6, 0xab, // 26
	0x10, 0x0d, 0x2a, 0x37, 0x64, 0x79, 0x5e, 0x43, // 27
	0xb2, 0xaf, 0x88, 0x95, 0xc6, 0xdb, 0xfc, 0xe1, // 28
	0x5a, 0x47, 0x60, 0x7d, 0x2e, 0x33, 0x14, 0x09, // 29
	0x7f, 0x62, 0x45, 0x58, 0x0b, 0x16, 0x31, 0x2c, // 30
	0x97, 0x8a, 0xad, 0xb0, 0xe3, 0xfe, 0xd9, 0xc4  // 31
};
unsigned char crcCalculate8_SAE_J1850(const unsigned char* ptr, int length);

class DataCommunication
{
public:
	PROTOCOL_INFO prtInfo;
	DataCommunication(char *port);
	~DataCommunication();
	void Command_Start();
	void Command_Stop();
	void Command_Signal();
	unsigned char crcCalculate8_SAE_J1850(const unsigned char* ptr, int length);

	//Serial communication
	SerialPort serial;
	int serialConnect(char* _portNum);
	void disconnect();
	void sendPacket(PROTOCOL_INFO sendMsg);
	void stop_and_stop_signal_datafield_initialize();
};

